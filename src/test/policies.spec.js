// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Policies', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Policies', async function() {
    await driver.get("http://localhost:3000/")
    {
      const element = await driver.findElement(By.css(".MuiIconButton-edgeStart > .MuiSvgIcon-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiIconButton-edgeStart > .MuiSvgIcon-root")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css("a:nth-child(3) .MuiListItemIcon-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css("a:nth-child(3) .MuiListItemIcon-root")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".active .MuiTypography-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.css(".css-78trlr-MuiButtonBase-root-MuiIconButton-root > .MuiSvgIcon-root")).click()
    {
      const element = await driver.findElement(By.id("PathFilter"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.id("PathFilter")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.id("multiple-limit-tags")).click()
    await driver.findElement(By.id("multiple-limit-tags-option-0")).click()
    {
      const element = await driver.findElement(By.css(".MuiAutocomplete-clearIndicator path"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiAutocomplete-clearIndicator path")).click()
    await driver.findElement(By.css(".MuiBackdrop-root")).click()
    {
      const element = await driver.findElement(By.id("ModeFilter"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.id("ModeFilter")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.id("multiple-limit-tags")).click()
    await driver.findElement(By.id("multiple-limit-tags-option-0")).click()
    {
      const element = await driver.findElement(By.css(".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root")).click()
    await driver.findElement(By.css(".MuiBackdrop-root")).click()
    {
      const element = await driver.findElement(By.id("AcessToFilter"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.id("AcessToFilter")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.id("multiple-limit-tags")).click()
    await driver.findElement(By.id("multiple-limit-tags-option-0")).click()
    {
      const element = await driver.findElement(By.css(".MuiAutocomplete-clearIndicator path"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiAutocomplete-clearIndicator path")).click()
    await driver.findElement(By.css(".MuiBackdrop-root")).click()
    {
      const element = await driver.findElement(By.id("ResourceTypeFilter"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.id("ResourceTypeFilter")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.id("multiple-limit-tags")).click()
    await driver.findElement(By.id("multiple-limit-tags-option-0")).click()
    await driver.findElement(By.css(".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root")).click()
    await driver.findElement(By.css(".MuiBackdrop-root")).click()
    {
      const element = await driver.findElement(By.id("ResourceTypeFilter"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.id("ResourceTypeFilter")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.id("multiple-limit-tags")).click()
    await driver.findElement(By.id("multiple-limit-tags-option-0")).click()
    await driver.findElement(By.css(".MuiBackdrop-root")).click()
    {
      const element = await driver.findElement(By.id("ResourceTypeFilter"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.id("ResourceTypeFilter")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root")).click()
    await driver.findElement(By.css(".MuiBackdrop-root")).click()
    {
      const element = await driver.findElement(By.id("ActorFilter"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.id("ActorFilter")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.id("multiple-limit-tags")).click()
    await driver.findElement(By.id("multiple-limit-tags-option-0")).click()
    {
      const element = await driver.findElement(By.css(".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root")).click()
    await driver.findElement(By.css(".MuiBackdrop-root")).click()
    {
      const element = await driver.findElement(By.id("ActorTypeFilter"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.id("ActorTypeFilter")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.findElement(By.id("multiple-limit-tags")).click()
    await driver.findElement(By.id("multiple-limit-tags-option-0")).click()
    {
      const element = await driver.findElement(By.css(".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiAutocomplete-clearIndicator > .MuiSvgIcon-root")).click()
    await driver.findElement(By.css(".MuiBackdrop-root")).click()
    await driver.findElement(By.css(".MuiTableBody-root > .MuiTableRow-root:nth-child(1) > .MuiTableCell-root:nth-child(8) .MuiSvgIcon-root")).click()
    {
      const element = await driver.findElement(By.css(".MuiOutlinedInput-root > #FormType"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiBackdrop-invisible"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("body")).click()
    await driver.findElement(By.css(".MuiMenuItem-root:nth-child(2)")).click()
    {
      const element = await driver.findElement(By.css(".MuiOutlinedInput-root > #ActorOthers"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiMenuItem-root:nth-child(1)"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("body")).click()
    await driver.findElement(By.css(".MuiMenuItem-root:nth-child(2)")).click()
    await driver.findElement(By.css(".MuiBackdrop-invisible")).click()
    await driver.findElement(By.css(".MuiButton-text")).click()
    await driver.findElement(By.css(".MuiIconButton-sizeLarge > .MuiSvgIcon-root")).click()
    {
      const element = await driver.findElement(By.css(".MuiOutlinedInput-root > #path"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiBackdrop-invisible"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("body")).click()
    await driver.findElement(By.css(".MuiMenuItem-root")).click()
    await driver.findElement(By.id("access")).click()
    await driver.findElement(By.id("access")).sendKeys("default")
    await driver.findElement(By.id("resource")).click()
    await driver.findElement(By.id("resource")).sendKeys("a")
    {
      const element = await driver.findElement(By.css(".MuiOutlinedInput-root > #mode"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiBackdrop-invisible"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("body")).click()
    await driver.findElement(By.css(".MuiMenuItem-root:nth-child(1)")).click()
    await driver.findElement(By.css(".MuiMenuItem-root:nth-child(2)")).click()
    await driver.findElement(By.css(".MuiBackdrop-invisible")).click()
    await driver.executeScript("window.scrollTo(0,0)")
    {
      const element = await driver.findElement(By.css(".MuiOutlinedInput-root > #FormType"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiBackdrop-invisible"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("body")).click()
    await driver.findElement(By.css(".MuiMenuItem-root:nth-child(1)")).click()
    {
      const element = await driver.findElement(By.css(".MuiGrid-root > .MuiButton-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiGrid-root > .MuiButton-root")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiOutlinedInput-root > #User0"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiBackdrop-invisible"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("body")).click()
    await driver.findElement(By.css(".MuiMenuItem-root:nth-child(1)")).click()
    await driver.findElement(By.id("actorName0")).click()
    await driver.findElement(By.id("actorName0-option-3")).click()
    await driver.executeScript("window.scrollTo(0,0)")
    await driver.findElement(By.css(".MuiButton-startIcon > .MuiSvgIcon-root")).click()
    await driver.executeScript("window.scrollTo(0,0)")
    {
      const element = await driver.findElement(By.css(".MuiOutlinedInput-root > #User1"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiBackdrop-invisible"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("body")).click()
    await driver.findElement(By.css(".MuiMenuItem-root:nth-child(2)")).click()
    await driver.executeScript("window.scrollTo(0,0)")
    await driver.findElement(By.id("actorName1")).click()
    await driver.findElement(By.id("actorName1-option-0")).click()
    {
      const element = await driver.findElement(By.css(".MuiGrid-root > .MuiButton-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiGrid-root > .MuiButton-root")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    await driver.executeScript("window.scrollTo(0,0)")
    {
      const element = await driver.findElement(By.css(".MuiOutlinedInput-root > #User2"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiBackdrop-invisible"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("body")).click()
    await driver.findElement(By.css(".MuiMenuItem-root:nth-child(3)")).click()
    await driver.executeScript("window.scrollTo(0,0)")
    {
      const element = await driver.findElement(By.id("actorName2"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.id("actorName2-label"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.id("actorName2-option-7")).click()
    await driver.findElement(By.css(".MuiGrid-root:nth-child(6) > .MuiGrid-root > .MuiGrid-root:nth-child(1)")).click()
    {
      const element = await driver.findElement(By.css(".MuiGrid-root:nth-child(2) > .MuiGrid-root .MuiGrid-root > .MuiButtonBase-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiGrid-root:nth-child(2) > .MuiGrid-root .MuiGrid-root > .MuiButtonBase-root path"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiGrid-root:nth-child(2) > .MuiGrid-root .MuiGrid-root > .MuiButtonBase-root path")).click()
    {
      const element = await driver.findElement(By.CSS_SELECTOR, "body")
      await driver.actions({ bridge: true }).moveToElement(element, 0, 0).perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiGrid-root:nth-child(4) .MuiGrid-root > .MuiButtonBase-root > .MuiSvgIcon-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiGrid-root:nth-child(4) .MuiGrid-root > .MuiButtonBase-root > .MuiSvgIcon-root")).click()
    await driver.executeScript("window.scrollTo(0,0)")
    await driver.findElement(By.css(".MuiButton-text")).click()
    {
      const element = await driver.findElement(By.id("mui-2"))
      await driver.actions({ bridge: true }).moveToElement(element).clickAndHold().perform()
    }
    {
      const element = await driver.findElement(By.css(".MuiBackdrop-root"))
      await driver.actions({ bridge: true }).moveToElement(element).release().perform()
    }
    await driver.findElement(By.css("body")).click()
    await driver.findElement(By.xpath("//div[@id=\'menu-\']/div[3]/ul/li[3]")).click()
    await driver.findElement(By.id("enhanced-table-checkbox-14")).click()
    {
      const element = await driver.findElement(By.css(".css-78trlr-MuiButtonBase-root-MuiIconButton-root:nth-child(2) > .MuiSvgIcon-root"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".css-78trlr-MuiButtonBase-root-MuiIconButton-root:nth-child(2) > .MuiSvgIcon-root")).click()
    {
      const element = await driver.findElement(By.css(".MuiButton-text"))
      await driver.actions({ bridge: true }).moveToElement(element).perform()
    }
    await driver.findElement(By.css(".MuiButton-text")).click()
  })
})
